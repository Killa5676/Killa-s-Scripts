--farming
getgenv().autoclick = false
getgenv().autofarmworld = false
getgenv().autotakequest = false
getgenv().autostage = false
getgenv().autoequipbestbat = false
getgenv().autobuyworlds = false

--Hatching
getgenv().autohatch = false
getgenv().autohatch3 = false
getgenv().autoequipbestpet = false
--upgrade
getgenv().autoupgrade1 = false
getgenv().autoupgrade2 = false
getgenv().autoupgrade3 = false
getgenv().autoupgrade4 = false



local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

   
local autofarmOptions = {
    ["1st_Location"] = {
        ["Level 1"] = { "Inmate", "Inmate" },
        ["Level 2"] = { "Prisoner", "Prisoner" },
        ["Level 3"] = { "Thief", "Thief" },
        ["Level 4"] = { "Robbery Boss", "Robbery Boss" }
    },
    ["2nd_Location"] = {
        ["Level 1"] = { "Beach Cheeky", "Beach Cheeky" },
        ["Level 2"] = { "Jock Boxer", "Jock Boxer" },
        ["Level 3"] = { "Beach Strongman", "Beach Strongman" },
        ["Level 4"] = { "Beach Lifeguard", "Beach Lifeguard" }
    },
    ["3rd_Location"] = {
        ["Level 1"] = { "Ice Man", "Ice Man" },
        ["Level 2"] = { "Snowman", "Snowman" },
        ["Level 3"] = { "Polar Bear", "Polar Bear" },
        ["Level 4"] = { "Yeti", "Yeti" }
    },
    ["4th_Location"] = {
        ["Level 1"] = { "Magma Skeleton", "Magma Skeleton" },
        ["Level 2"] = { "Magma Warrior", "Magma Warrior" },
        ["Level 3"] = { "Demon", "Demon" },
        ["Level 4"] = { "Fire Devil", "Fire Devil" }
    },
    ["5th_Location"] = {
        ["Level 1"] = { "Ninja", "Ninja" },
        ["Level 2"] = { "Strong Ninja", "Strong Ninja" },
        ["Level 3"] = { "Samurai", "Samurai" },
        ["Level 4"] = { "Golden Samurai", "Golden Samurai" }
    },
    ["6th_Location"] = {
        ["Level 1"] = { "Beginner Miner", "Beginner Miner" },
        ["Level 2"] = { "Master Miner", "Master Miner" },
        ["Level 3"] = { "Engineer", "Engineer" },
        ["Level 4"] = { "Senior Miner", "Senior Miner" }
    },

}

local questTable = {
    ["1st_Location"] = "Lumberjack",
    ["2nd_Location"] = "Instructor"
  }


  local ignoreParams = {
    ["2nd_Location"] = {"Beach", nil, nil, nil, nil},
    ["3rd_Location"] = {"Beach", "Winter", nil, nil, nil},
    ["4th_Location"] = {"Beach", "Winter", "Volcano", nil, nil},
    ["5th_Location"] = {"Beach", "Winter", "Volcano", "Sakura Mountains", nil},
    ["6th_Location"] = {nil, nil, nil, nil, nil}
  }



    
local speedSelected = 50
local character = game:GetService("Players").LocalPlayer.Character
local humanoid = character:WaitForChild("Humanoid")

-- Function to change the speed
local function SpeedChanger(speed)
    speedSelected = speed -- Update the selected speed variable
    humanoid.WalkSpeed = speed -- Modify the speed of the humanoid
end

-- Function to handle character respawn
local function OnCharacterAdded(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = speedSelected -- Apply the stored speed when the character respawns
end

-- Function to handle character removal (death)
local function OnCharacterRemoving()
    humanoid.WalkSpeed = 50 -- Reset the speed to the default value when the character is removed (dies)
end



local uiopen = workspace.UIOpenHitboxes:GetChildren()
local selectedui
local uiopentable = {}
for i,v in pairs(uiopen) do
    table.insert(uiopentable, v.Name)
end



local worldteleporters = workspace.Teleporters:GetChildren()
local selecteleporter
local teleportertable = {}
for i,v in pairs(worldteleporters) do
    table.insert(teleportertable, v.Name)
end

local worlds = workspace.WORLD:GetChildren()
local selectedworld
local worldtable = {}

for i, v in pairs(worlds) do
    local worldName = v.Name
    if worldName ~= "End_Location" and worldName ~= "Other Staff" then
        table.insert(worldtable, worldName)
    end
end


local selectegg
local eggs = workspace.Eggs:GetChildren()
local eggtable = {}
for i,v in pairs(eggs) do
    table.insert(eggtable, v.Name)
end


local selectnpc
local selectnpctable = {"Level 1", "Level 2", "Level 3", "Level 4"}

local farmspeed


local Players = game:GetService("Players")
local TweenService = game:GetService('TweenService')
local TweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear)

local selectpmethod
local selectpmethodtable = {"Instant, Tween/Flying"}

local localPlayer = Players.LocalPlayer

function TweenToHead(npc)
    local humanoid = npc:FindFirstChild("Humanoid")
    local head = npc:FindFirstChild("Head")

    if humanoid and head then
        local headPosition = head.Position
        local cf = CFrame.new(headPosition)
        local tween = TweenService:Create(localPlayer.Character.HumanoidRootPart, TweenInfo, {CFrame = cf})
        tween:Play()
    end
end

function getcurrentPlayerPOS()
    local plyr = game.Players.LocalPlayer
    if plyr.Character then
        return plyr.Character.HumanoidRootPart
    end
    return false
end

function teleporto(placeCframe)
    local plyr = game.Players.LocalPlayer
    if plyr.Character then
        plyr.Character.HumanoidRootPart.CFrame = placeCframe
    end
end



local workspace = game:GetService("Workspace")

local StarterGui = game:GetService("StarterGui")
local eggFrame  = game:GetService("Players").LocalPlayer.PlayerGui.HatchFrame.HatchFrame


local function AutoClick()
    spawn(function () 
        while getgenv().autoclick == true do
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Punch"):FireServer()
            wait(0)
        if getgenv().autoclick == false then 
            break
        end
        end
        end)

        end      

        local function autofarmworld(pnpc, fnpc, speed, Method)
            spawn(function()
                while getgenv().autofarmworld do
                    local npcFolder = workspace.NPC[pnpc]:GetChildren()
        
                    for _, npc in ipairs(npcFolder) do
                        TweenToHead(npc)
                        wait(speed)
        
                        if not getgenv().autofarmworld then
                            break
                        end
        
                        local npcName = npc.Name
                        local npcExists = true
        
                        while getgenv().autofarmworld and npcExists do
                            local success, error = pcall(function()
                                local args = {
                                    [1] = fnpc,
                                    [2] = npcName
                                }
                                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Punch"):FireServer(unpack(args))
                            end)
        
                            if not success then
                                warn("Error occurred while executing punch:", error)
                            end
        
                            npcExists = workspace.NPC[pnpc]:FindFirstChild(npcName)
                            wait()
                        end
        
                        -- Teleport to the next NPC
                        if getgenv().autofarmworld then
                            local nextNPC = workspace.NPC[pnpc]:FindFirstChild(npcName)
                            if nextNPC then
                                Method(nextNPC)
                            end
                        end
                    end
        
                    wait(speed) -- Randomized delay between iterations
                end
            end)
        end
        
        
        


local function AutoTakeQuest(quest)
    spawn(function()
        while getgenv().autotakequest == true do
            local args = {
                [1] = quest
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("TakeQuest"):FireServer(unpack(args))

            wait(1)

            if getgenv().autotakequest == true then
                break
            end
        end
    end)
end

local function AutoHatch(egg, amount, tp)
    spawn(function ()
        while getgenv().autohatch == true do

            teleporto(workspace.Eggs[tp].key.CFrame)

            
            local args = {
                [1] = egg,
                [2] = amount
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("OpenEgg"):InvokeServer(unpack(args))

            if getgenv().autohatch == false then
                break
            end
            
        end      
    end)
end


local function AutoUpgrade(upgnum, upgval)
    spawn(function()
        while getgenv()[upgnum] == true do
            local args = {
                [1] = upgval
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BuyUpgrade"):FireServer(unpack(args))

            wait(0)
        if getgenv()[upgnum] == false then 
            break
        end
        end
    end)
end 
        
        local function AutoStage()
            spawn(function()
                while getgenv().autostage == true do
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BuyStage"):FireServer()

        
                    wait(0)
                if getgenv().autostage == false then 
                    break
            end
        end
    end)
end  

local function AutoEquipBestBat()
    spawn(function()
        while getgenv().autoequipbestbat == true do
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("EquipBestBat"):FireServer()

            wait(0)
        if getgenv().autoequipbestbat == false then 
            break
    end
end
end)
end

local function AutoBuyWorlds(ignore, ignore1, ignore2, ignore3, ignore4)
    spawn(function()
        local doors = workspace.Doors["Spawn World"]:GetChildren()

        while getgenv().autobuyworlds do
            for _, door in ipairs(doors) do
                if door.Name ~= ignore and door.Name ~= ignore1 and door.Name ~= ignore2 and door.Name ~= ignore3 and door.Name ~= ignore4 then
                    local args = {
                        [1] = door.Name
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BuyLocation"):FireServer(unpack(args))

                    wait(0)

                    if not getgenv().autobuyworlds then 
                        break
                    end
                end
            end
        end
    end)
end


local function teleportworld(world)
    spawn(function()
        teleporto(workspace.Teleporters[world].CFrame)
end)
end

local function AutoEquipBestPet()
    spawn(function()
        while getgenv().autoequipbestpet do
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("EquipBestPets"):FireServer()

                
                wait(1)
                
                if not getgenv().autoequipbestpet then 
                    break
                end
        end
    end)
end

local function TeleportUI(ui)
    spawn(function ()
        teleporto(workspace.UIOpenHitboxes[ui].CFrame)       
    end)
end



local Window = OrionLib:MakeWindow({Name = "Strong Fighters Simulator! // Killa#2836", HidePremium = false, SaveConfig = true, ConfigFolder = "Killa Hub"})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Farming"
})

Tab:AddToggle({
	Name = "AutoClick(turn off when autofarm)",
	Default = false,
	Callback = function(bool)
		getgenv().autoclick = bool
    print("AutoClick is", bool)
    if bool then
        AutoClick()
        end       
	end    
})

local Section = Tab:AddSection({
	Name = ""
})

Tab:AddDropdown({
	Name = "SelectWorld",
	Default = "1st_Location",
	Options = worldtable,
	Callback = function(value)
        selectedworld = value
		print(value)
	end    
})

Tab:AddDropdown({
	Name = "SelectNPCLevel",
	Default = "Level 1",
	Options = selectnpctable,
	Callback = function(value)
        selectnpc = value
		print(value)
	end    
})

Tab:AddSlider({
	Name = "Delay",
	Min = 0,
	Max = 1,
	Default = 0,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.01,
	ValueName = "Punch delay",
	Callback = function(value)
		farmspeed = value
	end    
})


Tab:AddToggle({
    Name = "FarmSelected",
    Default = false,
    Callback = function(bool)
        getgenv().autofarmworld = bool
        print("FarmSelected is", bool)
        
        if bool then
            local selectedOptions = autofarmOptions[selectedworld]
            
            if selectedOptions then
                local npcParams = selectedOptions[selectnpc]
                
                if npcParams then
                    autofarmworld(npcParams[1], npcParams[2], farmspeed)
                end
            end
        end
    end
})


local Section = Tab:AddSection({
	Name = "Other"
})

Tab:AddToggle({
    Name = "AutoTakeQuest",
    Default = false,
    Callback = function(bool)
      getgenv().autotakequest = bool
      print("FarmSelected is", bool)
      if bool then
        local selectedQuest = questTable[selectedworld]
        if selectedQuest then
          AutoTakeQuest(selectedQuest)
        end
      end
    end
  })
  

Tab:AddToggle({
	Name = "AutoStage",
	Default = false,
	Callback = function(bool)
		getgenv().autostage = bool
    print("FarmSelected is", bool)
    if bool then
        AutoStage()
        end       
	end    
})

Tab:AddToggle({
	Name = "AutoEquipBestBat",
	Default = false,
	Callback = function(bool)
		getgenv().autoequipbestbat = bool
    print("AutoEquipBestBat is", bool)
    if bool then
       AutoEquipBestBat()
            
        end       
	end    
})

Tab:AddToggle({
    Name = "AutoBuyWorlds",
    Default = false,
    Callback = function(bool)
      getgenv().autobuyworlds = bool
      print("AutoBuyWorlds is", bool)
      if bool then
        local ignoreList = ignoreParams[selectedworld]
        AutoBuyWorlds(unpack(ignoreList))
      end
    end
  })



local Tab = Window:MakeTab({
	Name = "Hatching",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Main"
})

Tab:AddDropdown({
	Name = "SelectEgg",
	Default = "Basic",
	Options = eggtable,
	Callback = function(value)
        selectegg = value
		print(value)
	end    
})

Tab:AddToggle({
	Name = "AutoHatch",
	Default = false,
	Callback = function(bool)
		getgenv().autohatch = bool
    print("FarmSelected is", bool)
    if bool then
        AutoHatch(selectegg, "Single", selectegg)
            
        end       
	end    
})

Tab:AddToggle({
	Name = "TripleHatch(Gamepass)",
	Default = false,
	Callback = function(bool)
		getgenv().autohatch3 = bool
    print("FarmSelected is", bool)
    if bool then
        AutoHatch(selectegg, "Triple", selectegg)
            
        end       
	end    
})

local Section = Tab:AddSection({
	Name = "Other"
})	

Tab:AddToggle({
    Name = "AutoEquipBestPet",
    Default = false,
    Callback = function(bool)
        getgenv().autoequipbestpet = bool
        print("AutoEquipBestPet is", bool)
        if bool then
            AutoEquipBestPet()
        end
    end
})


local hatchFrame = game:GetService("Players").LocalPlayer.PlayerGui.HatchFrame.HatchFrame

Tab:AddToggle({
    Name = "HideEgg",
    Default = false,
    Callback = function(value)
        print("Toggle value:", value)
        
        if value then
            -- Hide the egg frame
            StarterGui:SetCore("SendNotification", {
                Title = "Egg Hidden",
                Text = "The egg is now hidden.",
                Duration = 5
            })
            eggFrame.Visible = false
        else
            -- Unhide the egg frame
            StarterGui:SetCore("SendNotification", {
                Title = "Egg Unhidden",
                Text = "The egg is now unhidden.",
                Duration = 5
            })
            eggFrame.Visible = true
        end
    end    
})

Tab:AddButton({
	Name = "Remove Egg Animation",
	Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.HatchFrame:Destroy()
  	end    
})


local Tab = Window:MakeTab({
	Name = "Upgrades",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Main"
})

Tab:AddToggle({
    Name = "UpgradeCoins",
    Default = false,
    Callback = function(bool)
        getgenv().autoupgrade1 = bool
        print("UpgradeCoins is", bool)
        if bool then
            AutoUpgrade("autoupgrade1", "Coins")
        end
    end
})

Tab:AddToggle({
    Name = "UpgradeStrength",
    Default = false,
    Callback = function(bool)
        getgenv().autoupgrade2 = bool
        print("UpgradeStrength is", bool)
        if bool then
            AutoUpgrade("autoupgrade2", "Strength")
        end
    end
})

Tab:AddToggle({
    Name = "Upgrade Critical Chance",
    Default = false,
    Callback = function(bool)
        getgenv().autoupgrade3 = bool
        print("Upgrade Critical Chance is", bool)
        if bool then
            AutoUpgrade("autoupgrade3", "Critical Chance")
        end
    end
})

Tab:AddToggle({
    Name = "UpgradeWalkspeed",
    Default = false,
    Callback = function(bool)
        getgenv().autoupgrade4 = bool
        print("UpgradeWalkspeed is", bool)
        if bool then
            AutoUpgrade("autoupgrade4", "Walkspeed")
        end
    end
})



local Tab = Window:MakeTab({
	Name = "Teleport",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Worlds"
})

Tab:AddDropdown({
	Name = "SelectWorld",
	Default = "Forest Town",
	Options = teleportertable,
	Callback = function(value)
        selecteleporter = value
		print(value)
	end    
})

Tab:AddButton({
	Name = "Teleport Selected",
	Callback = function()
     		teleportworld(selecteleporter)
  	end    
})

local Section = Tab:AddSection({
	Name = "UIs/Shops"
})

Tab:AddDropdown({
	Name = "Select UI/Shop",
	Default = "CraftBats",
	Options = uiopentable,
	Callback = function(value)
        selectedui = value
		print(value)
	end    
})

Tab:AddButton({
	Name = "Teleport Selected",
	Callback = function()
     		TeleportUI(selectedui)
  	end    
})


local Tab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddSlider({
	Name = "Walkspeed",
	Min = 10,
	Max = 500,
	Default = 50,
	Color = Color3.fromRGB(255, 255, 255),
	Increment = 1,
	ValueName = "Walkspeed",
	Callback = function(value)
        speedselected = value
        SpeedChanger(speedselected)

    end
})

Tab:AddButton({
	Name = "Admin",
	Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
      	end    
})

local Section = Tab:AddSection({
	Name = "Scripting shit (Ignore)"
})

Tab:AddButton({
	Name = "rspy",
	Callback = function()
        --[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
loadstring(game:HttpGet("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpySource.lua"))()
      	end    
})


OrionLib:Init()









